{"version":3,"sources":["components/Columns.js"],"names":["useStyles","makeStyles","theme","root","top","left","bottom","right","position","alignSelf","breakInside","fontSize","display","alignItems","gap","pointerEvents","column","margin","borderRight","palette","divider","Columns","gridTemplateColumns","rowOptions","innerHeaders","useTheme","classes","useState","className","style","padding","paddingTop","paddingBottom","filter","ih","visible","map","innerHeader","i","clsx","property","label"],"mappings":"yJA8BMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,IAAK,MACLC,KAAM,MACNC,OAAQ,MACRC,MAAO,MACPC,SAAU,WACVC,UAAW,UACXC,YAAa,QACbC,SAAU,OACVC,QAAS,OACTC,WAAY,QACZC,IAAK,OACLC,cAAe,QAMlBC,OAAQ,CACLC,OAAQ,WAEVC,YAAY,aAAD,OAAehB,EAAMiB,QAAQC,SAEtC,eAAgB,CACdF,YAAa,iBAWJG,UA7DC,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,oBAAqBC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aAC5CtB,EAAQuB,cACRC,EAAU1B,EAAUE,GAC1B,EAA0CyB,mBAAS,MAAnD,6BAED,OAAO,qBACNC,UAAWF,EAAQvB,KACnB0B,MAAO,CACNC,QAASP,EAAWO,QACpBC,WAAY,EACZC,cAAe,EACfV,oBAAqBA,GANhB,SASHE,EACES,QAAO,SAAAC,GAAE,OAAIA,EAAGC,WAChBC,KAAI,SAACC,EAAaC,GAAd,OAAoB,qBAEvBV,UAAWW,YAAK,CAACb,EAAQV,UAFF,UACfqB,EAAYG,SADG,YACSH,EAAYI,OAAS","file":"static/js/4.784e3907.chunk.js","sourcesContent":["import { makeStyles, useTheme } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport PropTypes from 'prop-types'\nimport React, { useState } from 'react'\n\nconst Columns = ({ gridTemplateColumns, rowOptions, innerHeaders }) => {\n  const theme = useTheme()\n  const classes = useStyles(theme)\n  const [indexSelected, setIndexSelected] = useState(null)\n\n\treturn <div\n\t\tclassName={classes.root}\n\t\tstyle={{\n\t\t\tpadding: rowOptions.padding,\n\t\t\tpaddingTop: 0,\n\t\t\tpaddingBottom: 0,\n\t\t\tgridTemplateColumns: gridTemplateColumns\n\t\t}}\n  >\n    {innerHeaders\n      .filter(ih => ih.visible)\n      .map((innerHeader, i) => <div\n        key={`${innerHeader.property}-${innerHeader.label || ''}`}\n        className={clsx([classes.column])}\n        // onMouseEnter={() => indexSelected !== i && setIndexSelected(i)}\n        // onTouchStart={() => indexSelected !== i && setIndexSelected(i)}\n      />)}\n\t</div>\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    top: '0px',\n    left: '0px',\n    bottom: '0px',\n    right: '0px',\n    position: 'absolute',\n    alignSelf: 'stretch',\n    breakInside: 'avoid',\n    fontSize: '12px',\n    display: 'grid',\n    alignItems: 'unset',\n    gap: '16px',\n    pointerEvents: 'none',\n  },\n  // columnDisabled: {\n  //   pointerEvents: 'none !important',\n  //   boxShadow: `inset 0px 4px 0px 0px ${theme.palette.primary.main}66`,\n  // },\n\tcolumn: {\n    margin: '0px -8px',\n    // pointerEvents: 'all',\n\t\tborderRight: `1px solid ${theme.palette.divider}`,\n\n    '&:last-child': {\n      borderRight: '0px none'\n    },\n\t},\n}))\n\nColumns.propTypes = {\n  innerHeaders: PropTypes.array.isRequired,\n  rowOptions: PropTypes.object,\n  gridTemplateColumns: PropTypes.string.isRequired,\n}\n\nexport default Columns"],"sourceRoot":""}