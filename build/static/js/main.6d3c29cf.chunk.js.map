{"version":3,"sources":["parts/DataStores/index.js","parts/SampleRow.js","parts/GridStructure/index.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["currentSearchTerm","setTotal","setDataNew","setCurrentSearchTerm","setTerms","setSuggestions","richPayloads","selectedItem","setRichPayloads","trees","setTrees","contributors","setContributors","useEffect","fetch","then","response","json","data","results","map","item","custom","packageName","package","links","repository","replace","Object","entries","reduce","acc","description","push","split","count","word","term","sort","a","b","filter","length","toLowerCase","some","total","accumulateData","useCallback","repoUrl","accumulator","accumulatorName","setAccumulator","repo","name","url","message","localforage","getItem","dataStored","setItem","repoName","payload","searchString","string","query","highlightComponent","queryParts","stringTmp","parts","curr","replaceAll","part","forEach","index","which","find","qp","includes","type","id","substring","cloneElement","key","MetadataColumn","memo","value","searchTerm","setSearchTerm","useState","open","setOpen","anchorEl","setAnchorEl","selectedText","setSelectedText","suggestions","handleClose","Typography","style","display","variant","onMouseUp","selection","window","getSelection","focusNode","anchorOffset","focusOffset","dataItem","getBoundingClientRect","getRangeAt","clientWidth","width","clientHeight","height","color","children","borderBottom","Popper","placement","zIndex","border","borderRadius","padding","gap","backgroundColor","flexDirection","flexWrap","Set","suggestion","Chip","borderStyle","size","onClick","label","Button","SelectionAndOpenColumn","setOpenRows","openRows","selectedRows","setSelectedRows","alignItems","justifyContent","IconButton","disableRipple","openRow","row","Checkbox","checked","sr","SearchScoreColumn","theme","useTheme","classes","searchScoreColumnStyles","average","parseFloat","score","detail","quality","popularity","maintenance","className","container","searchScore","flex","Tooltip","title","toFixed","makeStyles","alignSelf","position","CollaboratorsColumn","collaboratorsColumnStyles","gridTemplateColumns","contributor","_","i","avatar_url","login","arrow","avatar","src","alt","opacity","NameColumn","extraPayload","stargazers_count","organization","date","version","borderColor","icon","full_name","KeywordsColumn","keywords","keyword","fontSize","borderWidth","cursor","LinksColumn","setUrl","iconMap","faNpm","faHouse","faGithub","faBug","origValue","event","currentTarget","handleClick","margin","boxShadow","CircularProgressBlock","uniqueKey","computedValue","CircularProgress","top","left","right","bottom","lineHeight","columnsState","processedGrid","setProcessedGrid","newGrid","header","align","noSort","component","disableOnClick","onSort","directionComponent","column","noWrapper","cs","visible","foundIndex","findIndex","useStyles","wrapperGrid","observableGrid","backgroundContainer","stats","statsLeft","alternating","focused","isBusy","selected","wrapper","alignContent","wrapperClean","wrapper2","actions","smallActions","bigContainer","minHeight","containerWrapper","overflow","containerClean","App","Math","random","toString","setData","setKeywords","focusIndex","setFocusIndex","useMemo","createTheme","palette","transitions","create","step","floor","Boolean","GridStructure","DataStores","ThemeProvider","global","alternatingRows","enabled","stepping","initialDirection","initialColumn","rowPadding","grid","rest","JSON","stringify","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","location","hostname","match","ReactDOM","render","StylesProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.6d3c29cf.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\nimport localforage from 'localforage';\nimport { useCallback, useEffect } from 'react';\n\nexport default ({\n  currentSearchTerm, setTotal, setCurrentSearchTerm,\n  setDataNew, setTerms, setSuggestions,\n  richPayloads, selectedItem, setRichPayloads, trees, setTrees,\n  contributors, setContributors }) => {\n\n  useEffect(() => {\n    if (currentSearchTerm !== '') {\n      fetch(`https://api.npms.io/v2/search?q=${currentSearchTerm}&size=40`)\n        .then(response => response.json())\n        .then(data => {\n          setDataNew(data.results.map(item => ({\n            ...item, custom: {\n            packageName: item.package.links.repository?.replace('https://github.com/', '')\n            }\n          })))\n          setTerms(Object.entries(data.results.reduce((acc, item) => {\n            if (item?.package?.description) {\n              acc.push(...item?.package?.description?.split(' '))\n            }\n            return acc\n          }, []).reduce((count, word) => {\n            count[word] = (count[word] || 0) + 1;\n            return count;\n          }, {}))\n            .map(item => ({ term: item[0], count: item[1] }))\n            .sort((a, b) => b.count - a.count)\n            .filter(item => item.count > 1 && item.term.length > 2 && item.term.toLowerCase() !== currentSearchTerm.toLowerCase())\n            .filter(item => !['for', 'a', 'all','of', 'and', 'with', 'to',  'the', 'in', 'into', 'that', 'by'].some(word => word.toLowerCase() === item.term.toLowerCase())))\n          setTotal(data.total)\n        });\n      fetch(`https://api.npms.io/v2/search/suggestions?q=${currentSearchTerm}&size=10`)\n        .then(response => response.json())\n        .then(data => setSuggestions(data));\n    }\n  }, [currentSearchTerm, setDataNew, setSuggestions, setTerms, setTotal]);\n\n  const accumulateData = useCallback((repoUrl, accumulator, accumulatorName, setAccumulator) => {\n    if (selectedItem) {\n      if (!accumulator.some(item => item.repo === selectedItem.name)) {\n        fetch(repoUrl(selectedItem?.url?.replace('https://github.com/', '')))\n          .then(response => response.json())\n          .then(data => {\n            if (!data.message) {\n              setAccumulator(() => [...accumulator, { repo: selectedItem.name, data }])\n              localforage.getItem(accumulatorName).then(dataStored => {\n                localforage.setItem(accumulatorName, [...(dataStored || []), { repo: selectedItem.name, data }])\n              })\n            }\n          });\n      }\n    }\n  }, [selectedItem])\n\n  useEffect(() => {\n    accumulateData((repoName) => `https://api.github.com/repos/${repoName}`, richPayloads, 'richPayloads', (payload) => setRichPayloads(payload))\n  }, [selectedItem, richPayloads, accumulateData, setRichPayloads]);\n\n  useEffect(() => {\n    accumulateData((repoName) => `https://api.github.com/repos/${repoName}/contributors`, contributors, 'contributors', (payload) => setContributors(payload))\n  }, [selectedItem, contributors, accumulateData, setContributors])\n\n  useEffect(() => {\n    accumulateData((repoName) => `https://api.github.com/repos/${repoName}/git/trees/HEAD?per_page=100&recursive=1`, trees, 'trees', (payload) => setTrees(payload))\n  }, [selectedItem, trees, accumulateData, setTrees])\n\n  useEffect(() => {\n    localforage.getItem('richPayloads').then(data => setRichPayloads(data || []));\n    localforage.getItem('contributors').then(data => setContributors(data || []));\n    localforage.getItem('trees').then(data => setTrees(data || []));\n  }, [setContributors, setRichPayloads, setTrees])\n\n  return null\n}\n","import { faGithub, faNpm } from '@fortawesome/free-brands-svg-icons';\nimport { faBug, faHouse } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button, Checkbox, Chip, CircularProgress, IconButton, Popper, Tooltip, Typography } from '@material-ui/core';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport ChevronRightSharpIcon from '@material-ui/icons/ChevronRightSharp';\nimport KeyboardArrowDownSharpIcon from '@material-ui/icons/KeyboardArrowDownSharp';\nimport StarsIcon from '@material-ui/icons/Stars';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport { cloneElement, memo, useState } from 'react';\n\nexport const searchString = (string, query, highlightComponent) => {\n  const queryParts = query.split(' ')\n  let stringTmp = `${string}`\n  const parts = []\n  queryParts\n    .reduce((acc, curr) => {\n      acc = acc.toLowerCase().replaceAll(curr, `###${curr}###`)\n      return acc\n    }, string || '')\n    .split('###')\n    .filter((part) => part.length > 0)\n    .forEach((part, index) => {\n      const which = queryParts.find(qp => part.includes(qp))\n      if (which) {\n        parts.push({ type: 'highlight', id: `${part}-${index}`, string: `${stringTmp.substring(0, which.length)}` })\n      } else {\n        parts.push({ type: 'string', id: `${query}-${index}`, string: `${stringTmp.substring(0, part.length)}` })\n      }\n      stringTmp = stringTmp.length !== part.length ? stringTmp.substring(part.length) : stringTmp\n    })\n  return parts.reduce((acc, curr) => {\n    acc.push(curr.type === 'highlight' ? cloneElement(highlightComponent(curr.string), { key: curr.id})  : curr.string)// acc = `${acc}${curr.string}`\n    return acc\n  }, [])\n}\n\n\nconst MetadataColumn = memo(({ item, value, searchTerm, setSearchTerm, setCurrentSearchTerm }) => {\n  const [open, setOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedText, setSelectedText] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleMouseUp = () => {\n    const selection = window.getSelection();\n    const selectedText = selection.focusNode.data.substring(selection.anchorOffset, selection.focusOffset)\n    if (!selection || selection.anchorOffset === selection.focusOffset) {\n      handleClose();\n      return;\n    }\n\n    fetch(`https://api.npms.io/v2/search/suggestions?q=${selectedText}&size=10`)\n      .then(response => response.json())\n      .then(data => {\n        setSuggestions(data.map(dataItem => dataItem.package.name))\n      });\n\n    const getBoundingClientRect = () => selection.getRangeAt(0).getBoundingClientRect();\n\n    setOpen(true);\n    setSelectedText(selectedText)\n    setAnchorEl({\n      clientWidth: getBoundingClientRect().width,\n      clientHeight: getBoundingClientRect().height,\n      getBoundingClientRect,\n    });\n  };\n\n  return <>\n      <Typography key={`${item.package.name}.${value}`} style={{ display: 'inline-block' }} variant=\"caption\"  onMouseUp={handleMouseUp} color=\"textSecondary\">{searchString(\n        value,\n        searchTerm,\n        (children) => <Typography variant=\"caption\" color=\"primary\" style={{ display: 'inline-block', borderBottom: '2px dashed #3f51b5'}}>{children}</Typography>)\n      }</Typography>\n      <Popper {...{ open, anchorEl }} placement=\"bottom-start\" style={{zIndex: 1}}>\n        <div style={{width: '600px', display: 'flex', border: '1px solid #CCC', borderRadius: '8px', padding: '8px', gap: '8px', backgroundColor: '#FFF', flexDirection: \"column\"}}>\n          <Typography>{selectedText}</Typography>\n          <div style={{ display: 'flex', gap: '8px', flexWrap: 'wrap'}}>\n            {[...new Set([selectedText, ...suggestions].sort().map(suggestion => suggestion.toLowerCase()))].map(suggestion => <Chip\n              variant=\"outlined\"\n              style={{ borderStyle: 'dotted'}}\n              key={suggestion}\n              size=\"small\"\n              onClick={() => {\n                handleClose()\n                setSearchTerm(`${searchTerm} ${suggestion}`)\n                setCurrentSearchTerm(`${searchTerm} ${suggestion}`)\n              }}\n              label={suggestion}\n            />)}\n          </div>\n          <Button variant=\"outlined\" onClick={handleClose}>Close</Button>\n        </div>\n      </Popper>\n    </>\n})\n\nconst SelectionAndOpenColumn = memo(({item, index, setOpenRows, openRows, selectedRows, setSelectedRows}) => {\n  return <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}>\n    {<div style={{ display: 'flex', gap: '4px', flexWrap: 'wrap' }}>\n      <IconButton\n        size=\"small\"\n        disableRipple\n        onClick={() => setOpenRows(openRows.includes(item.package.name)\n          ? openRows.filter(openRow => openRow !== item.package.name)\n          : [...openRows.filter(row => row !== item.package.name), item.package.name]\n        )}>\n        {openRows.includes(item.package.name)\n          ? <KeyboardArrowDownSharpIcon />\n          : <ChevronRightSharpIcon />}\n      </IconButton>\n    </div>}\n    <Checkbox\n      size='small'\n      disableRipple\n      color=\"primary\"\n      checked={selectedRows.some(sr => sr === item.package.name)}\n      onClick={() => setSelectedRows(() => selectedRows.some(sr => sr === item.package.name)\n        ? [...selectedRows.filter(sr => sr !== item.package.name)]\n        : [...selectedRows, item.package.name])} />\n  </div>\n})\n\nconst SearchScoreColumn = memo(({ item, index }) => {\n  const theme = useTheme()\n  const classes = searchScoreColumnStyles(theme)\n\n  const average = parseFloat(((item.score.detail.quality + item.score.detail.popularity + item.score.detail.maintenance) / 3) * 100)\n  return <div className={classes.container} style={{ backgroundColor: item.searchScore > 100 ? '#e3fee399' : 'transparent' }}>\n    <div style={{ justifyContent: 'flex-end', flex: '1 1 100%', display: 'flex', gap: '8px', alignItems: 'center' }}>\n      {item.searchScore > 100 && <ThumbUpIcon color=\"action\" />}\n      <Tooltip title={`Position: ${average}`}>\n        <Typography color=\"textSecondary\" variant=\"h6\">{`${average.toFixed(2)}%`}</Typography>\n      </Tooltip>\n    </div>\n    {[\n      { title: 'Quality', value: item.score.detail.quality },\n      { title: 'Popularity', value: item.score.detail.popularity },\n      { title: 'Maintenance', value: item.score.detail.maintenance },\n    ].map(({ title, value }) => <CircularProgressBlock key={`${title}.${item.package.name}`} {...{value, title }} />)}\n  </div>\n})\n\nconst searchScoreColumnStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex !important',\n    gap: '4px',\n    alignItems: 'center !important',\n    alignSelf: 'stretch',\n    flexWrap: 'wrap',\n\n    '& > *': {\n      position: 'relative',\n    }\n  }\n}))\n\nconst CollaboratorsColumn = ({ item, contributors }) => {\n  const groups = 5\n  const theme = useTheme()\n  const classes = collaboratorsColumnStyles(theme)\n  return <div style={{ display: 'grid', gap: '4px', gridTemplateColumns: `repeat(${groups}, minmax(20px, 25px))` }}>\n    {contributors\n      .filter(contributor => contributor.repo === item.package.name)\n      .map(contributor => (contributor?.data.length > 0 ? contributor.data : []).filter((_, i) => i < 10)\n      .map(({ avatar_url, login }) => <Tooltip key={`${item.package.name}.${avatar_url}`} arrow title={login}>\n          <img\n            className={classes.avatar}\n            src={avatar_url}\n            style={{ width: '20px', height: '20px', borderRadius: '50%' }}\n            alt=\"avatar\"\n          />\n        </Tooltip>))}\n    </div>\n}\n\nconst collaboratorsColumnStyles = makeStyles((theme) => ({\n  avatar: {\n    opacity: 0.6,\n\n    '&:hover': {\n      opacity: 1,\n    }\n  }\n}))\n\nconst NameColumn = memo(({ item, searchTerm, richPayloads }) => {\n  const extraPayload = richPayloads?.filter(payload => payload.repo === item.package.name).map(payload => payload.data)[0]\n  return <div\n    key={`name.${item.package.name}`}\n    style={{\n      display: 'flex',\n      gap: '8px',\n      flexWrap: 'wrap',\n      alignItems: 'center',\n      alignSelf: 'stretch',\n      backgroundColor: extraPayload?.stargazers_count > 100000 ? '#f0e4cf77' : 'transparent'\n    }}>\n    <div style={{ display: 'flex', gap: '8px', flexDirection: 'row', alignItems: 'center', flex: '1 1 100%' }}>\n      {extraPayload?.organization?.avatar_url && <img src={extraPayload?.organization?.avatar_url} style={{ width: '24px', height: '24px', borderRadius: '50%' }} alt=\"avatar\" />}\n      <MetadataColumn {...{ item, value: item.package.name, searchTerm }} />\n    </div>\n      <Tooltip arrow title={`Last release: ${item.package.date}`}>\n        <Chip size=\"small\" variant=\"outlined\" label={item.package.version} />\n      </Tooltip>\n      {extraPayload?.stargazers_count && <Chip\n        style={{ borderColor: \"orange\", borderStyle: 'dotted' }}\n        key={extraPayload.full_name}\n        size=\"small\"\n        label={extraPayload.stargazers_count}\n        variant=\"outlined\"\n        color=\"primary\"\n        icon={<StarsIcon style={{color: 'orange'}} />} />}\n  </div>\n})\n\nconst KeywordsColumn = memo(({ item, searchTerm, setSearchTerm, setCurrentSearchTerm }) => {\n  return <div style={{ display: 'flex', gap: '4px', flexWrap: 'wrap' }} key={`${item.package.name}.${item.searchScore}`}>\n    {[...new Set((item?.package?.keywords || []))]\n      .sort()\n      .filter(( _, i ) => i < 10)\n      .map(keyword => <div\n        key={`${item.package.name}.${item.searchScore}.${keyword}`}\n        id={`${item.package.name}.${item.searchScore}.${keyword}`}\n        title={`Search by ${keyword}`}\n        onClick={() => { setSearchTerm(keyword); setCurrentSearchTerm(keyword) }}\n        style={{\n          fontSize: '11px',\n          borderRadius: '12px',\n          borderColor: keyword.toLowerCase() === searchTerm.toLowerCase() ? '#CCC' : '#777',\n          color: keyword.toLowerCase() === searchTerm.toLowerCase() ? '#CCC' : '#777',\n          borderWidth: '1px',\n          cursor: 'pointer',\n          padding: '4px 8px',\n          borderStyle: 'dashed'\n        }}\n      >\n        {keyword}\n      </div>)}\n  </div>\n})\n\nconst LinksColumn = memo(({ item }) => {\n  const [open, setOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [url, setUrl] = useState(null);\n\n  const iconMap = [\n    { key: 'npm', icon: faNpm, },\n    { key: 'homepage', icon: faHouse, },\n    { key: 'repository', icon: faGithub, },\n    { key: 'bugs', icon: faBug, },\n  ]\n\n  const handleClick = (event, url) => {\n    setOpen(!open);\n    setUrl(!open ? url : null);\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n\n\n  return <div style={{ display: 'flex', gap: '16px', flexWrap: 'wrap' }}>\n    {Object\n      .entries(item.package.links)\n      .map(([key, value]) => ({\n        key,\n        value: value.replace(\"https://www.npmjs.com/package/\", \"\").replace(\"https://github.com/\", \"\"),\n        origValue: value\n      }))\n      .map(({ key, value, origValue }) => <Tooltip key={key} arrow title={`Open ${value}`}>\n        <span>\n          <FontAwesomeIcon\n            color={origValue === url ? '#3f51b5' : '#000'}\n            onClick={event => handleClick(event, origValue)}\n            icon={iconMap.find(icon => icon.key === key).icon} />\n          </span>\n        </Tooltip>)}\n    <Popper {...{ open, anchorEl }} placement=\"left\" style={{zIndex: '2'}}>\n      <iframe\n        src={url}\n        title=\"Preview of website resource\"\n        style={{\n          margin: '8px',\n          backgroundColor: '#FFF',\n          boxShadow: '0px 4px 0px 1px #77777733',\n          border: '2px dotted #777',\n          borderRadius: '8px',\n          width: '800px',\n          height: '750px'\n          }} />\n    </Popper>\n  </div>\n})\n\n\nconst CircularProgressBlock = ({ value, title, uniqueKey, size = '30px' }) => {\n  const computedValue = (parseFloat(value).toFixed(2) * 100).toFixed(0)\n  return <div style={{position: 'relative'}}>\n    <CircularProgress\n      id={uniqueKey}\n      color={computedValue < 50 ? 'secondary' :  'inherit'}\n      style={{ width: size , height: size  }}\n      variant=\"determinate\"\n      value={parseFloat(computedValue) || 0}\n    />\n    <Tooltip title={`${title}: ${computedValue}%`} arrow>\n      <Typography style={{\n        fontSize: '9px',\n        position: 'absolute',\n        top: '0px',\n        left: '0px',\n        cursor: 'pointer',\n        right: '0px',\n        bottom: '0px',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        lineHeight: '0px',\n        height: size,\n      }} variant='body2' color={computedValue > 95 ? 'primary' : 'textSecondary'}>{`${computedValue}%`}</Typography>\n      </Tooltip>\n  </div>\n}\n\n\nexport {\n  LinksColumn, CircularProgressBlock, MetadataColumn, KeywordsColumn, NameColumn, SelectionAndOpenColumn, CollaboratorsColumn, SearchScoreColumn\n};\n","/* eslint-disable import/no-anonymous-default-export */\nimport { Typography } from '@material-ui/core';\nimport AccountTreeSharpIcon from '@material-ui/icons/AccountTreeSharp';\nimport PhotoSizeSelectActualIcon from '@material-ui/icons/PhotoSizeSelectActual';\nimport { useEffect } from 'react';\nimport {\n\tCollaboratorsColumn, KeywordsColumn, LinksColumn,\n\tMetadataColumn, NameColumn, SearchScoreColumn, SelectionAndOpenColumn\n} from '../SampleRow';\n\nexport default ({\n\tsearchTerm, setOpenRows, setCurrentSearchTerm, columnsState,\n\topenRows, selectedRows, setSelectedRows, richPayloads, processedGrid,\n\tsetSearchTerm, contributors, setProcessedGrid }) => {\n\t// const grid = useMemo(() => , [contributors, openRows, richPayloads, searchTerm, selectedRows, setOpenRows, setSearchTerm, setSelectedRows])\n\n\tuseEffect(() => {\n\t\tconst grid = [\n\t\t\t// {\n\t\t\t// \theader: {\n\t\t\t// \t\tkey: 'custom.section.header',\n\t\t\t// \t\talign: 'flex-end',\n\t\t\t// \t\tnoColumn: true,\n\t\t\t// \t},\n\t\t\t// \trow: {\n\t\t\t// \t\tkey: 'custom.section.row',\n\t\t\t// \t\tfullWidth: true,\n\t\t\t// \t\tcomponent: (item, index, count = 3) => index % count === 0 ?\n\t\t\t// \t\t\t<div key={`header.${item.package.name}`} style={{ display: 'flex', backgroundColor: \"#EEEEEE\", padding: '8px', gap: '4px', flexWrap: 'wrap' }}>\n\t\t\t// \t\t\t\t<Typography variant=\"caption\" color=\"textSecondary\">Header from {index + 1} - {index + count}</Typography>\n\t\t\t// \t\t</div> : null\n\t\t\t// \t}\n\t\t\t// },\n\t\t\t// {\n\t\t\t//   header: {\n\t\t\t//     key: 'selection',\n\t\t\t//     align: 'flex-end',\n\t\t\t// \t\twidth: '60px',\n\t\t\t//     visible: true,\n\t\t\t//     noSort: true,\n\t\t\t// \t\tcomponent: '',\n\t\t\t// \t},\n\t\t\t//   row: {\n\t\t\t//     key: 'type',\n\t\t\t//     component: (item, index) => <Checkbox\n\t\t\t//       color=\"primary\"\n\t\t\t//       fullWidth={false}\n\t\t\t//       checked={selectedRows.some(sr => sr === item.package.name)}\n\t\t\t//       onClick={() => setSelectedRows(selectedRows.some(sr => sr === item.package.name)\n\t\t\t//         ? [...selectedRows.filter(sr => sr !== item.package.name)]\n\t\t\t//         : [...selectedRows, item.package.name])} />,\n\t\t\t// \t}\n\t\t\t// },\n\t\t\t{\n\t\t\t\tkey: 'openRow',\n\t\t\t\theader: {\n\t\t\t\t\talign: 'center',\n\t\t\t\t\twidth: '90px',\n\t\t\t\t\tnoSort: true,\n\t\t\t\t\tcomponent: () => <AccountTreeSharpIcon />,\n\t\t\t\t},\n\t\t\t\trow: {\n\t\t\t\t\tcomponent: (item, index) => <SelectionAndOpenColumn {...{ item, index, setOpenRows, openRows, selectedRows, setSelectedRows }} />,\n\t\t\t\t}\n\t\t\t},\n\t\t\t// {\n\t\t\t// \tkey: 'package.description',\n\t\t\t// \theader: {\n\t\t\t// \t\twidth: '250px',\n\t\t\t// \t\tcomponent: 'Packet Description',\n\t\t\t// \t},\n\t\t\t// },\n\t\t\t// {\n\t\t\t// \tkey: 'package.keywords',\n\t\t\t// \theader: {\n\t\t\t// \t\tnoSort: true,\n\t\t\t// \t\twidth: '290px',\n\t\t\t// \t\tcomponent: () => <div>Packet Keywords</div>\n\t\t\t// \t},\n\t\t\t// },\n\t\t\t// {\n\t\t\t// \tkey: 'package.links',\n\t\t\t// \t// header: {\n\t\t\t// \t\t// noSort: true,\n\t\t\t// \t\t// component: 'Packet Description',\n\t\t\t// \t// },\n\t\t\t// },\n\t\t\t// {\n\t\t\t// \tkey: 'package.name',\n\t\t\t// \theader: {\n\t\t\t// \t\tnoSort: true,\n\t\t\t// \t\tcomponent: 'Packet Name',\n\t\t\t// \t},\n\t\t\t// },\n\t\t\t// {\n\t\t\t// \tkey: 'thumbnails',\n\t\t\t// \theader: {\n\t\t\t// \t\talign: 'center',\n\t\t\t// \t\twidth: '270px',\n\t\t\t// \t\tvisible: false,\n\t\t\t// \t\tnoSort: true,\n\t\t\t// \t\tcomponent: () => <PhotoSizeSelectActualIcon />,\n\t\t\t// \t},\n\t\t\t// \trow: {\n\t\t\t// \t\tcomponent: item => <div style={{ width: '250px', height: '150px', display: 'block', overflow: 'hidden' }}>\n\t\t\t// \t\t\t<iframe\n\t\t\t// \t\t\t\tkey={item.package.name}\n\t\t\t// \t\t\t\tsrc={item?.package?.links.npm}\n\t\t\t// \t\t\t\ttitle=\"Preview of website resource\"\n\t\t\t// \t\t\t\tstyle={{\n\t\t\t// \t\t\t\t\tbackgroundColor: '#FFF',\n\t\t\t// \t\t\t\t\twidth: '500px',\n\t\t\t// \t\t\t\t\tborder: '0px none',\n\t\t\t// \t\t\t\t\theight: '300px',\n\t\t\t// \t\t\t\t\ttransform: 'scale(0.5)',\n\t\t\t// \t\t\t\t\ttransformOrigin: '0% 0%'\n\t\t\t// \t\t\t\t}} />\n\t\t\t// \t\t</div>,\n\t\t\t// \t}\n\t\t\t// },\n\t\t\t{\n\t\t\t\tkey: 'searchScore',\n\t\t\t\theader: {\n\t\t\t\t\talign: 'flex-end',\n\t\t\t\t\twidth: '170px',\n\t\t\t\t\tcomponent: 'Search Score',\n\t\t\t\t},\n\t\t\t\trow: {\n\t\t\t\t\tcomponent: item => <SearchScoreColumn {...{ item }} />,\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'package.name',\n\t\t\t\theader: {\n\t\t\t\t\twidth: 'minmax(250px, 1fr)',\n\t\t\t\t\tdisableOnClick: true,\n\t\t\t\t\tcomponent: ({ onSort, sort, directionComponent }) => <div style={{ display: 'flex', gap: '4px', alignItems: 'flex-start', flexDirection: 'column' }}>\n\t\t\t\t\t\t{[{ key: 'package.version', label: 'Version' }, { key: 'package.name', label: 'Package Name' }].map(item => <div key={item.key} style={{ display: 'flex', gap: '8px' }}>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tonClick={() => onSort(item.key)}\n\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\n\t\t\t\t\t\t\t\tcolor={item.key === sort.column ? 'primary' : 'textSecondary'}\n\t\t\t\t\t\t\t\tvariant=\"subtitle2\">\n\t\t\t\t\t\t\t\t{item.label}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t{item.key === sort.column && directionComponent}\n\t\t\t\t\t\t</div>)}\n\t\t\t\t\t</div>,\n\t\t\t\t},\n\t\t\t\trow: {\n\t\t\t\t\tcomponent: item => <NameColumn {...{ item, searchTerm, richPayloads }} />\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'description',\n\t\t\t\theader: {\n\t\t\t\t\twidth: 'minmax(200px, 1fr)',\n\t\t\t\t\talign: 'flex-end',\n\t\t\t\t\tcomponent: 'Description',\n\t\t\t\t},\n\t\t\t\trow: {\n\t\t\t\t\tnoWrapper: true,\n\t\t\t\t\tcomponent: item => <MetadataColumn {...{ item, value: item.package.description, searchTerm, setSearchTerm, setCurrentSearchTerm }} />,\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'keywords',\n\t\t\t\theader: {\n\t\t\t\t\twidth: 'minmax(200px, 1fr)',\n\t\t\t\t\tnoSort: true,\n\t\t\t\t\tcomponent: 'Keywords',\n\t\t\t\t},\n\t\t\t\trow: {\n\t\t\t\t\tcomponent: item => <KeywordsColumn {...{ item, searchTerm, setSearchTerm, setCurrentSearchTerm }} />,\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'links',\n\t\t\t\theader: {\n\t\t\t\t\talign: 'center',\n\t\t\t\t\twidth: 'minmax(140px, 160px)',\n\t\t\t\t\tnoSort: true,\n\t\t\t\t\tcomponent: 'Links',\n\t\t\t\t},\n\t\t\t\trow: {\n\t\t\t\t\tcomponent: (item) => <LinksColumn item={item} />,\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'Collaborators',\n\t\t\t\theader: {\n\t\t\t\t\talign: 'flex-end',\n\t\t\t\t\twidth: 'minmax(120px, 145px)',\n\t\t\t\t\tnoSort: true,\n\t\t\t\t\tcomponent: 'Collaborators',\n\t\t\t\t},\n\t\t\t\trow: {\n\t\t\t\t\tcomponent: (item) => <CollaboratorsColumn {...{ item, contributors }} />\n\t\t\t\t}\n\t\t\t},\n\t\t\t// {\n\t\t\t// \tkey: 'Secondary:Column',\n\t\t\t// \theader: {\n\t\t\t// \t\talign: 'flex-end',\n\t\t\t// \t\tnoColumn: true,\n\t\t\t// \t},\n\t\t\t// \trow: {\n\t\t\t// \t\tcomponent: (item) => openRows.some(openRow => openRow === item.package.name)\n\t\t\t// \t\t\t&& <iframe\n\t\t\t// \t\t\t\tkey={item.package.name}\n\t\t\t// \t\t\t\tsrc={`https://octo-repo-visualization.vercel.app/?repo=${item?.package?.links.repository.replace('https://github.com/', '')}`}\n\t\t\t// \t\t\t\ttitle=\"Preview of website resource\"\n\t\t\t// \t\t\t\tstyle={{\n\t\t\t// \t\t\t\t\tmargin: '8px',\n\t\t\t// \t\t\t\t\tbackgroundColor: '#FFF',\n\t\t\t// \t\t\t\t\tboxShadow: '0px 4px 0px 1px #77777733',\n\t\t\t// \t\t\t\t\tborder: '2px dotted #777',\n\t\t\t// \t\t\t\t\tborderRadius: '8px',\n\t\t\t// \t\t\t\t\twidth: '100%',\n\t\t\t// \t\t\t\t\theight: '350px'\n\t\t\t// \t\t\t\t}} />\n\t\t\t// \t}\n\t\t\t// },\n\t\t\t// {\n\t\t\t//   header: {\n\t\t\t//     key: 'custom.section.footer',\n\t\t\t//     align: 'flex-end',\n\t\t\t//     visible: true,\n\t\t\t//     noColumn: true,\n\t\t\t// \t},\n\t\t\t//   row: {\n\t\t\t//     columnStart: 7,\n\t\t\t//     columnEnd: 'none',\n\t\t\t//     rowStart: 3,\n\t\t\t//     rowEnd: 3,\n\t\t\t//     component: (item) => <div style={{ display: 'flex', backgroundColor: '#FFF', border: '1px solid #EEE', padding: '8px', gap: '4px', flexWrap: 'wrap' }}>\n\t\t\t//       <Typography color=\"textSecondary\" variant=\"caption\">footer 7 to none</Typography>\n\t\t\t//     </div>\n\t\t\t// \t}\n\t\t\t// },\n\t\t\t// {\n\t\t\t//   header: {\n\t\t\t//     key: 'custom.section.footer2',\n\t\t\t//     align: 'flex-end',\n\t\t\t//     visible: true,\n\t\t\t//     noColumn: true,\n\t\t\t// \t},\n\t\t\t//   row: {\n\t\t\t//     columnStart: 2,\n\t\t\t//     columnEnd: 4,\n\t\t\t//     rowStart: 3,\n\t\t\t//     rowEnd: 3,\n\t\t\t//     component: (item) => <div style={{ display: 'flex', backgroundColor: '#FFF', border: '1px solid #EEE', padding: '8px', gap: '4px', flexWrap: 'wrap' }}>\n\t\t\t//       <Typography color=\"textSecondary\" variant=\"caption\">footer none to 4</Typography>\n\t\t\t//     </div>\n\t\t\t// \t}\n\t\t\t// },\n\t\t]\n\n\t\tconst newGrid = grid\n\t\t\t.map(column => {\n\t\t\t\tif (columnsState.some(cs => cs.key === column.key)) {\n\t\t\t\treturn {\n\t\t\t\t\t...column,\n\t\t\t\t\theader: {\n\t\t\t\t\t\t...column.header,\n\t\t\t\t\t\tvisible: columnsState.find(cs => cs.key === column.key).visible,\n\t\t\t\t\t},\n\t\t\t\t\trow: { ...column.row, }\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn column\n\t\t\t})\n\t\t\t.reduce((acc, column, index) => {\n\t\t\t\tconst foundIndex = columnsState.findIndex(cs => cs.key === column.key);\n\t\t\t\tif(foundIndex > -1) {\n\t\t\t\t\tacc[foundIndex || index] = column\n\t\t\t\t} else {\n\t\t\t\t\tacc.push(column)\n\t\t\t\t}\n\t\t\t\treturn acc\n\t\t\t}, [])\n\n\t\t// console.log('newGrid', newGrid)\n\n\t\tsetProcessedGrid(() => newGrid)\n\t}, [setProcessedGrid, setOpenRows, columnsState, openRows, selectedRows, setSelectedRows, searchTerm, richPayloads, setSearchTerm, contributors, setCurrentSearchTerm])\n\n\treturn null\n}","import { Chip, Typography } from '@material-ui/core';\nimport { createTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport { useEffect, useMemo, useState } from 'react';\nimport { Grid, GridColumns, GridHeaders, GridRows, GridStats, GridSticky } from 'react-observable-grid';\n// import { Grid, GridColumns, GridHeaders, GridRows, GridStats, GridSticky } from './components';\n// import { Grid } from './components/GridStoreNg';\nimport DataStores from './parts/DataStores';\nimport GridStructure from './parts/GridStructure';\n\nconst App = () => {\n  let queryTimeout\n  let uniqueId = (Math.random() + 1).toString(36).substring(7);\n\n  const [isLive, setIsLive] = useState(false)\n  const [data, setData] = useState([]);\n  const [columnsState, setColumnsState] = useState([]);\n  const [processedGrid, setProcessedGrid] = useState([]);\n  const [terms, setTerms] = useState([]);\n  const [total, setTotal] = useState(null);\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('react');\n  const [currentSearchTerm, setCurrentSearchTerm] = useState('react');\n  const [suggestions, setSuggestions] = useState([]);\n  const [selectedRepo, setSelectedRepo] = useState(null);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [richPayloads, setRichPayloads] = useState([]);\n  const [contributors, setContributors] = useState([]);\n  const [trees, setTrees] = useState([]);\n  const [openRows, setOpenRows] = useState([]);\n  const [keywords, setKeywords] = useState([]);\n  const [focusIndex, setFocusIndex] = useState(-1);\n\n  const theme = useMemo(() => createTheme({\n    palette: { type: 'light', },\n    transitions: {\n      create: () => 'none',\n    },\n  }), [])\n  const classes = useStyles()\n\n  const global =  {\n\t\talternatingRows: {\n      enabled: true,\n      color: '#f5f5f5',\n\t\t\tstepping: (index) => index % 2 === 0,\n    },\n    sort: {\n      initialDirection: '',\n      initialColumn: '',\n    },\n    style: {\n      padding: '16px',\n      header: {\n        padding: '16px',\n      },\n      row: {\n        padding: '0px 16px',\n      },\n      rowPadding: '0px 16px',\n      gap: '8px'\n    }\n  }\n\n  const filling = () => <>\n    {/* Grid Headers */}\n                <GridHeaders />\n                {/* <GridHeaders\n                  upComponent={\"UP\"}\n                />\n                <GridHeaders\n                  className={classes.header}\n                  fallbackComponent={(component, { onSort, sort, key, directionComponent }) => <div key={key} style={{ display: 'flex', gap: '4px', alignItems: 'center'}}>\n                    <Typography\n                      style={{ cursor: 'pointer' }}\n                      variant=\"caption\"\n                      onClick={onSort}\n                      color={sort.isActive ? 'primary' : 'textSecondary'}\n                    >\n                      {component}\n                    </Typography>\n                    {directionComponent}\n                  </div>}\n                />\n                <GridHeaders className={classes.header}>\n                  {({ headers }) => headers.map(({ key, onSort, component, directionComponent }) => <div style={{ display: 'flex', alignItems: 'center' }} {...{ key }}>\n                    <Typography onClick={onSort} style={{ cursor: 'pointer' }} variant=\"caption\">{component}</Typography>\n                    {directionComponent}\n                  </div>)}\n                </GridHeaders> */}\n\n                {/* Grid Columns */}\n                <GridColumns />\n                {/* <GridColumns style={{border: '1px dotted red'}} /> */}\n                {/* <GridColumns>\n                  {({ columns }) => columns.map(({ key }, index) => <div style={index !== columns.length - 1 ? { borderRight: '1px dotted red' } : {}} key={key}></div>)}\n                </GridColumns> */}\n\n                <GridRows {...{ focusIndex }} />\n                {/* <GridRows selectedRow={selectedRow} generateKey={(row) => row}>\n                  {({ rows, className, styleProps }) => rows.map(({ style, data, component, alternating, key, index }) => <div\n                    onMouseUp={() => {\n                      setSelectedRow(index)\n                      setSelectedItem({\n                        url: Object.entries(data.package.links).filter(([key, _]) => key === 'repository').map(([_, value]) => value)[0],\n                        name: data.package.name,\n                      })\n                    }}\n                    key={key}\n                    style={{\n                      ...styleProps,\n                      ...alternating ? { backgroundColor: '#f5f5f5' }: {},\n                    }}\n                    // className={[className]}\n                    className={[\n                      className,\n                    // selectedRows.includes(data.package.name) ? classes.selected : '',\n                    // (selectedItem?.name === data.package.name && !richPayloads.some(rp => rp.repo === data.package.name)) ? classes.isBusy : '',\n                    // index === selectedRow ? classes.focused : '',\n                    ]\n                    // .filter(Boolean).join(' ')}\n                    // {...{ id: data.package.name, key: data.package.name, style: { ...styleProps, borderBottom: '1px solid #DDD', }\n                    // }\n                  }\n                  >\n                    {component}\n                  </div>)}\n                </GridRows> */}\n                <GridStats  className={classes.stats}>\n                  {({ ...rest }) => <div>{JSON.stringify(rest)}</div>}\n                </GridStats>\n                <GridSticky\n                  style={{\n                    backgroundColor: '#FFF',\n                    padding: '8px',\n                    gap: '8px',\n                    flexWrap: 'wrap',\n                    display: 'flex',\n                    justifyContent: 'space-around',\n                    alignItems: 'center',\n                    alignContent: 'center',\n                  }}\n                  >\n                  <>\n                  {keywords.map(keyword => <Chip\n                    key={keyword.value}\n                    onClick={() => setFocusIndex(keyword.index)}\n                    label={`${keyword.index} - ${keyword.value}`}\n                    size=\"small\"\n                    variant=\"outlined\" />)}\n                  </>\n                </GridSticky>\n\n\n  </>\n\n  useEffect(() => {\n    const steps = 10\n    if (data.length <= steps) {\n      setKeywords([])\n    } else {\n      const step = Math.floor(data.length / steps)\n      if (step < 4) {\n        setKeywords([])\n      } else {\n        setKeywords(data\n          .map((dataItem, index) => {\n            if (index % step === 0) {\n              return {\n                value: dataItem.package.name,\n                index,\n              }\n            }\n          })\n          .filter(Boolean)\n        )\n      }\n    }\n  }, [data])\n\n  return <>\n    <GridStructure {...{\n      processedGrid, searchTerm, setOpenRows, openRows, selectedRows, setSelectedRows, richPayloads, setCurrentSearchTerm,\n      setSearchTerm, contributors, setProcessedGrid, columnsState,\n    }} />\n    <DataStores {...{currentSearchTerm, setTotal, setCurrentSearchTerm,\n      setDataNew: setData, setTerms, suggestions, setSuggestions,\n      richPayloads, selectedItem, setRichPayloads, trees, setTrees,\n      contributors, setContributors}} />\n    <ThemeProvider {...{ theme }} >\n    <div style={{\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '8px',\n      position: 'absolute',\n      top: '24px',\n      left: '24px',\n      right: '24px',\n      bottom: '24px',\n      }}>\n        {/* <Flexbox style={{ gap: '8px' }} container direction='row' justifyContent='space-between' alignItems='center' wrap=\"nowrap\">\n          <SearchField {...{ searchTerm, suggestions, setSearchTerm, setCurrentSearchTerm }} />\n          <Button disabled={isLive} onClick={() => setIsLive(true)}>Live</Button>\n          <Button disabled={!isLive} onClick={() => setIsLive(false)}>Sandbox</Button>\n          <ColumnManager {...{ processedGrid, setProcessedGrid, columnsState, setColumnsState }} />\n        </Flexbox>\n        <div style={{display: 'flex', gap: '8px', flexWrap: 'wrap' }}>\n          {terms.map(term => <Chip key={term.term} avatar={<Avatar>{term.count}</Avatar>} variant=\"outlined\" size=\"small\" label={`${term.term}`}/>)}\n        </div> */}\n        {/* focus {focusIndex} */}\n        <div style={{ display: 'flex', flexDirection: 'column', gap: '8px', height: '100%', backgroundColor: '#EEE' }}>\n          {[\n            // {\n            //   key: 'globalAndDiscoveryData',\n            //   data: data.map(data => ({ ...data.package, ...data.score })),\n            // },\n            // {\n            //   key: 'globalAndDiscoveryDataSpread',\n            //   global,\n            //   data: data.map((data) => {\n            //     const { final, detail } = { ...data.score }\n            //     const { searchScore } = data\n            //     const dataItem = { ...data.package, searchScore, ...{ final, ...detail } }\n            //     return dataItem\n            //   }),\n            // },\n            // {\n            //   key: 'dataAndGrid',\n            //   data,\n            //   grid: processedGrid,\n            // },\n            {\n              key: 'globalAbdDataAndGrid',\n              global,\n              data,\n              grid: processedGrid,\n            }\n          ]\n            .map(({ key, global, data, grid }) => <div {...{key, className: `${classes.backgroundContainer} ${classes.wrapperGrid}`}}>\n              <Grid {...{ global, data, grid }}>{filling()}</Grid>\n          </div>)}\n        </div>\n      </div>\n    </ThemeProvider>\n    </>\n}\n\nconst useStyles = makeStyles(() => ({\n  wrapperGrid: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: \"#FFF\",\n    margin: '16px',\n    position: 'relative',\n    gap: '8px',\n    flex: '1 1 auto'\n  },\n  observableGrid: {\n    '& #Header-wrapper': {\n      boxShadow: 'none',\n      backgroundColor: \"#BBBBBB42\",\n      borderBottom: '1px solid #4052b5',\n    },\n    '& #Row-root': {\n      borderBottom: '1px solid #CCC',\n    },\n    // '& #Container-root > *': {\n    //   borderBottom: '1px solid #CCC'\n    // },\n    '& #Container-root > *:hover': {\n      backgroundColor: '#3f51b51c',\n    },\n    '& #Container-root > *:active': {\n      backgroundColor: '#3f51b51c',\n    },\n    '& #Container-root .Row-isSelected': {\n      backgroundColor: 'red',\n    }\n  },\n  avatar: {\n    opacity: 0.6,\n\n    '&:hover': {\n      opacity: 1,\n    }\n  },\n  backgroundContainer: {\n    // backgroundColor: '#e5e5f7',\n    // background: 'linear-gradient(135deg, #444cf711 25%, transparent 25%) -10px 0/ 20px 20px, linear-gradient(225deg, #444cf711 25%, transparent 25%) -10px 0/ 20px 20px, linear-gradient(315deg, #444cf711 25%, transparent 25%) 0px 0/ 20px 20px, linear-gradient(45deg, #444cf711 25%, #e5e5f711 25%) 0px 0/ 20px 20px',\n  },\n  header: {\n    borderBottom: \"1px solid #BBBBBB55\",\n    backgroundColor: \"#c7d0ff8a\",\n    // boxShadow: '0px 0px 2px 2px #CCC'\n  },\n  stats: {\n    position: 'absolute',\n    backgroundColor: '#BBB',\n    border: '1px solid #888',\n    right: '16px',\n    padding: '16px',\n    bottom: '100px'\n  },\n  statsLeft: {\n    position: 'absolute',\n    backgroundColor: '#BBB',\n    border: '1px dotted #888',\n    left: '16px',\n    padding: '16px',\n    bottom: '60px'\n  },\n  row: {\n    backgroundColor: '#f0f0f077',\n\n    '&:hover': {\n      backgroundColor: '#e3e3e377',\n    }\n  },\n  alternating: {\n    backgroundColor: '#ffffff77',\n  },\n  focused: {\n    boxShadow: 'inset 0px 0px 0px 1px #4052b5',\n  },\n  isBusy: {\n    filter: 'blur(1px) grayscale(1)',\n  },\n  selected: {\n    backgroundColor: '#c9d2ff77 !important',\n  },\n  wrapper: {\n    display: 'flex',\n    gap: '16px',\n    left: '24px',\n    right: '24px',\n    top: '24px',\n    bottom: '24px',\n    flexDirection: 'column',\n    position: 'absolute',\n    alignContent: 'stretch',\n    justifyContent: 'center',\n    alignItems: 'stretch',\n  },\n  wrapperClean: {\n    display: 'flex',\n    gap: '16px',\n    left: '0px',\n    right: '0px',\n    top: '0px',\n    bottom: '0px',\n    flexDirection: 'column',\n    position: 'absolute',\n    alignContent: 'stretch',\n    justifyContent: 'center',\n    alignItems: 'stretch',\n  },\n  wrapper2: {\n    display: 'flex',\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    flexDirection: 'column',\n  },\n  actions: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    gap: '8px',\n    flexWrap: 'wrap',\n    alignItems: 'center'\n  },\n  smallActions: {\n    gap: '4px',\n  },\n  bigContainer: {\n    minHeight: '60px'\n  },\n  containerWrapper: {\n    flex: '1 1 auto',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  container: {\n    flex: '1 0 auto',\n    position: 'relative',\n    borderRadius: '4px',\n    overflow: 'hidden',\n    border: '1px solid #CCC',\n    // border: '1px solid rgb(230, 230, 230)',\n    // borderTop: '4px solid rgb(204, 0, 0)',\n  },\n  containerClean: {\n    flex: '1 0 auto',\n    position: 'relative',\n    // borderRadius: '8px',\n    overflow: 'hidden',\n    // border: '1px solid #333',\n  }\n}))\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { StylesProvider } from '@material-ui/core/styles';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(<StylesProvider>\n\t\t<App />\n\t</StylesProvider>, document.getElementById('root'));\n\nserviceWorkerRegistration.unregister();\nreportWebVitals();\n"],"sourceRoot":""}