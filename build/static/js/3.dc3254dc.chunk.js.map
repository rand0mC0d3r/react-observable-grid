{"version":3,"sources":["components/ActionButtons.js"],"names":["ActionButtons","selectedIndex","isAtTop","customActions","total","filtered","theme","useTheme","classes","useStyles","predefinedActions","id","title","label","visible","style","fontSize","className","root","filter","item","map","key","arrow","onClick","requestedElement","document","getElementById","scrollIntoView","behavior","block","focusElement","makeStyles","position","bottom","spacing","right","display","gap","zIndex","alignItems","fontWeight","border","palette","divider","padding","borderRadius","shape","backdropFilter","defaultProps"],"mappings":"kGAAA,kEAMMA,EAAgB,SAAC,GAAgE,IAA9DC,EAA6D,EAA7DA,cAAeC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,cAAeC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/DC,EAAQC,cACRC,EAAUC,EAAUH,GAEpBI,EAAoB,CACxB,CAAEC,GAAI,WAAYC,MAAM,mBAAD,OAAqBX,GAAiBY,MAAM,UAAD,OAAOZ,EAAgB,GAAKa,QAASb,GACvG,CAAEU,GAAI,QAASC,MAAM,kBAAD,OAAoBX,GAAiBY,MAAO,SAAKC,QAASZ,GAC9E,CAAES,GAAI,WAAYC,MAAM,kBAAD,OAAoBP,GAAYQ,MAAO,qCAAE,cAAC,IAAD,CAAYE,MAAO,CAACC,SAAU,UAAhC,IAA6CX,KAAcS,QAAST,IAAaD,GAASA,EAAQ,GAChK,CAAEO,GAAI,QAASC,MAAM,eAAD,OAAiBR,GAASS,MAAOT,EAAOU,QAASV,EAAQ,IAU/E,OAAO,sBAAKa,UAAWT,EAAQU,KAAxB,UACJR,EAAkBS,QAAO,SAAAC,GAAI,OAAIA,EAAKN,WAASO,KAAI,gBAAGV,EAAH,EAAGA,GAAIE,EAAP,EAAOA,MAAOD,EAAd,EAAcA,MAAd,OAA0B,wBAAC,IAAD,CAAeA,QAASU,IAAKX,EAAIY,OAAK,GAClH,qBAAKC,QAAS,kBATG,SAACb,GACpB,IAAMc,EAAmBC,SAASC,eAAehB,GAC9Cc,GACDA,EAAiBG,eAAe,CAAEC,SAAU,SAAUC,MAAO,WAMzCC,CAAapB,IAAKM,UAAWT,EAAQY,KAAzD,SAAgEP,QAEjEV,MAICM,EAAYuB,aAAW,SAAA1B,GAAK,MAAK,CACrCY,KAAM,CACJe,SAAU,WACVC,OAAQ5B,EAAM6B,QAAQ,GACtBC,MAAO9B,EAAM6B,QAAQ,GACrBE,QAAS,OACTC,IAAK,MACLC,OAAQ,IACRC,WAAY,YAEdpB,KAAM,CACJqB,WAAY,OACZC,OAAO,aAAD,OAAepC,EAAMqC,QAAQC,SACnCC,QAAS,YACTR,QAAS,OACTG,WAAY,SACZM,aAAcxC,EAAMyC,MAAMD,aAC1BE,eAAgB,YAChBV,IAAKhC,EAAM6B,QAAQ,IAEnB,UAAW,CACTa,eAAgB,mCAKtBhD,EAAciD,aAAe,CAC3B7C,MAAO,EACPC,SAAU,GAWGL","file":"static/js/3.dc3254dc.chunk.js","sourcesContent":["import { Tooltip } from '@material-ui/core';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst ActionButtons = ({ selectedIndex, isAtTop, customActions, total, filtered }) => {\n  const theme = useTheme()\n  const classes = useStyles(theme)\n\n  const predefinedActions = [\n    { id: 'selected', title: `Scroll to item: ${selectedIndex}`, label: `→ ${selectedIndex + 1}`, visible: selectedIndex },\n    { id: 'first', title: `Scroll to top: ${selectedIndex}`, label: '↑', visible: isAtTop },\n    { id: 'filtered', title: `Filtered rows: ${filtered}`, label: <><SearchIcon style={{fontSize: '18px'}} /> {filtered}</>, visible: filtered !== total && total > 0 },\n    { id: 'total', title: `Total rows: ${total}`, label: total, visible: total > 0 }\n  ]\n\n  const focusElement = (id) => {\n    const requestedElement = document.getElementById(id)\n    if(requestedElement) {\n      requestedElement.scrollIntoView({ behavior: 'smooth', block: 'center' })\n    }\n  }\n\n  return <div className={classes.root}>\n    {predefinedActions.filter(item => item.visible).map(({ id, label, title }) => <Tooltip {...{ title }} key={id} arrow>\n      <div onClick={() => focusElement(id)} className={classes.item}>{label}</div>\n    </Tooltip>)}\n    {customActions}\n  </div>\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    display: 'flex',\n    gap: '8px',\n    zIndex: '1',\n    alignItems: 'flex-end',\n  },\n  item: {\n    fontWeight: 'bold',\n    border: `1px solid ${theme.palette.divider}`,\n    padding: '10px 16px',\n    display: 'flex',\n    alignItems: 'center',\n    borderRadius: theme.shape.borderRadius,\n    backdropFilter: 'blur(4px)',\n    gap: theme.spacing(0.5),\n\n    '&:hover': {\n      backdropFilter: 'blur(4px) brightness(1.05)',\n    }\n  },\n}))\n\nActionButtons.defaultProps = {\n  total: 0,\n  filtered: 0,\n}\n\nActionButtons.propTypes = {\n  selectedIndex: PropTypes.number,\n  total: PropTypes.number,\n  filtered: PropTypes.number,\n  customActions: PropTypes.node.isRequired,\n  isAtTop: PropTypes.bool,\n}\n\nexport default ActionButtons"],"sourceRoot":""}