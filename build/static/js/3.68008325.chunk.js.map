{"version":3,"sources":["components/ActionButtons.js"],"names":["ActionButtons","selectedIndex","isAtTop","customActions","total","filtered","theme","useTheme","classes","useStyles","predefinedActions","id","onClick","focusElement","title","label","visible","style","fontSize","requestedElement","document","getElementById","scrollIntoView","behavior","block","className","root","filter","item","map","key","arrow","clsx","actionItem","makeStyles","position","bottom","spacing","right","display","gap","zIndex","alignItems","cursor","fontWeight","border","palette","divider","padding","borderRadius","shape","backdropFilter","lineHeight","userSelect","boxShadow","defaultProps"],"mappings":"kGAAA,yEAOMA,EAAgB,SAAC,GAAgE,IAA9DC,EAA6D,EAA7DA,cAAeC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,cAAeC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/DC,EAAQC,cACRC,EAAUC,EAAUH,GAEpBI,EAAoB,CACxB,CAAEC,GAAI,QAASC,QAAS,kBAAMC,EAAa,UAAUC,MAAM,sBAAwBC,MAAO,SAAKC,QAASd,GACxG,CAAES,GAAI,WAAYC,QAAS,kBAAMC,EAAa,aAAaC,MAAM,mBAAD,OAAqBb,EAAgB,GAAKc,MAAM,UAAD,OAAOd,EAAgB,GAAKe,QAASf,GACpJ,CAAEU,GAAI,WAAYG,MAAM,kBAAD,OAAoBT,GAAYU,MAAO,qCAAE,cAAC,IAAD,CAAYE,MAAO,CAACC,SAAU,UAAhC,IAA6Cb,KAAcW,QAASX,IAAaD,GAASA,EAAQ,GAChK,CAAEO,GAAI,QAASG,MAAM,eAAD,OAAiBV,GAASW,MAAOX,EAAOY,QAASZ,EAAQ,IAGzES,EAAe,SAACF,GACpB,IAAMQ,EAAmBC,SAASC,eAAeV,GAC9CQ,GACDA,EAAiBG,eAAe,CAAEC,SAAU,SAAUC,MAAO,YAIjE,OAAO,sBAAKC,UAAWjB,EAAQkB,KAAxB,UACJhB,EAAkBiB,QAAO,SAAAC,GAAI,OAAIA,EAAKZ,WAASa,KAAI,gBAAGlB,EAAH,EAAGA,GAAII,EAAP,EAAOA,MAAOD,EAAd,EAAcA,MAAOF,EAArB,EAAqBA,QAArB,OAAmC,wBAAC,IAAD,CAAeE,QAASgB,IAAKnB,EAAIoB,OAAK,GAC3H,qBAAKnB,QAASA,GAAWA,EAASa,UAAWO,YAAK,CAACxB,EAAQoB,KAAMhB,GAAWJ,EAAQyB,aAApF,SAAmGlB,QAEpGZ,MAICM,EAAYyB,aAAW,SAAA5B,GAAK,MAAK,CACrCoB,KAAM,CACJS,SAAU,WACVC,OAAQ9B,EAAM+B,QAAQ,GACtBC,MAAOhC,EAAM+B,QAAQ,GACrBE,QAAS,OACTC,IAAK,MACLC,OAAQ,IACRC,WAAY,YAEdT,WAAY,CACVU,OAAQ,WAEVf,KAAM,CACJgB,WAAY,OACZC,OAAO,aAAD,OAAevC,EAAMwC,QAAQC,SACnCC,QAAS,YACTT,QAAS,OACTG,WAAY,SACZO,aAAc3C,EAAM4C,MAAMD,aAC1BE,eAAgB,YAChBC,WAAY,OACZZ,IAAKlC,EAAM+B,QAAQ,IACnBgB,WAAY,OAEZ,UAAW,CACTF,eAAgB,6BAChBG,UAAU,yBAAD,OAA2BhD,EAAMwC,QAAQC,eAKxD/C,EAAcuD,aAAe,CAC3BnD,MAAO,EACPC,SAAU,GAWGL","file":"static/js/3.68008325.chunk.js","sourcesContent":["import { Tooltip } from '@material-ui/core';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst ActionButtons = ({ selectedIndex, isAtTop, customActions, total, filtered }) => {\n  const theme = useTheme()\n  const classes = useStyles(theme)\n\n  const predefinedActions = [\n    { id: 'first', onClick: () => focusElement('first'), title: `Scroll to beginning`, label: '↑', visible: isAtTop },\n    { id: 'selected', onClick: () => focusElement('selected'), title: `Scroll to item: ${selectedIndex + 1}`, label: `→ ${selectedIndex + 1}`, visible: selectedIndex },\n    { id: 'filtered', title: `Filtered rows: ${filtered}`, label: <><SearchIcon style={{fontSize: '18px'}} /> {filtered}</>, visible: filtered !== total && total > 0 },\n    { id: 'total', title: `Total rows: ${total}`, label: total, visible: total > 0 }\n  ]\n\n  const focusElement = (id) => {\n    const requestedElement = document.getElementById(id)\n    if(requestedElement) {\n      requestedElement.scrollIntoView({ behavior: 'smooth', block: 'center' })\n    }\n  }\n\n  return <div className={classes.root}>\n    {predefinedActions.filter(item => item.visible).map(({ id, label, title, onClick }) => <Tooltip {...{ title }} key={id} arrow>\n      <div onClick={onClick && onClick} className={clsx([classes.item, onClick && classes.actionItem])}>{label}</div>\n    </Tooltip>)}\n    {customActions}\n  </div>\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    display: 'flex',\n    gap: '8px',\n    zIndex: '1',\n    alignItems: 'flex-end',\n  },\n  actionItem: {\n    cursor: 'pointer',\n  },\n  item: {\n    fontWeight: 'bold',\n    border: `1px solid ${theme.palette.divider}`,\n    padding: '10px 16px',\n    display: 'flex',\n    alignItems: 'center',\n    borderRadius: theme.shape.borderRadius,\n    backdropFilter: 'blur(4px)',\n    lineHeight: '16px',\n    gap: theme.spacing(0.5),\n    userSelect: 'none',\n\n    '&:hover': {\n      backdropFilter: 'blur(4px) brightness(1.05)',\n      boxShadow: `inset 0px 0px 0px 1px ${theme.palette.divider}`,\n    }\n  },\n}))\n\nActionButtons.defaultProps = {\n  total: 0,\n  filtered: 0,\n}\n\nActionButtons.propTypes = {\n  selectedIndex: PropTypes.number,\n  total: PropTypes.number,\n  filtered: PropTypes.number,\n  customActions: PropTypes.node.isRequired,\n  isAtTop: PropTypes.bool,\n}\n\nexport default ActionButtons"],"sourceRoot":""}